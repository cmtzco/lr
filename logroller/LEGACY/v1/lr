#!/bin/bash

#define user host and ticket number
user=$1           #DO NOT EDIT
host=$2           #DO NOT EDIT
ticketnumber=$3   #DO NOT EDIT
pathtosearch=$4   #DO NOT EDIT
extension=$5      #DO NOT EDIT

##############################################################
##                                                          ##
##               BEGIN CONFIGURATION BLOCK                  ##
##      Define the paths that are used in the script        ##
##############################################################


mainlogpath=/opt/reddwerks/logs      #This is the path that the script will search the host for
locallogpath=/home/reddwerks/logs      #Path to the logs on the local machine running the script
processedlogpath=/home/reddwerks/processed        #Path to move all the zipped up archives to prevent clutter


##############################################################
##                                                          ##
##                 END CONFIGURATION BLOCK                  ##
##                                                          ##
##############################################################



#function to echo the usage message
function HELP {
  echo ""
  echo -e "Usage: lr [user] [host] [ticketnumber]"
  echo ""
  echo -e "\tThis command will allow you to specify"
  echo -e "\ta username, host, and ticket number."
  echo -e "\tThat will create a folder locally and"
  echo -e "\tpull down all the logs from that host"
  exit
}

## WORK IN PROGRESS
## This needs to be fixed to be sure that this 
## can be run without setpath
function SETEXT {
  # if [ $* =~ "*\-e*" ]; then
  if [ -z ${1} ]; then
    extension="log"
  else
    extension=$1
  fi
  LOGPULL
}

function SETPATH {
  if [ -z ${1} ]; then
    #define the path to the zipped up logs
    logz="$mainlogpath/$ticketnumber.tar.gz"   # DO NOT CHANGE
    #define the path the the folder where the zipped logs will go 
    logpath=$mainlogpath/$ticketnumber         # DO NOT CHANGE
  else
    mainlogpath=$1
    #define the path to the zipped up logs
    logz="$mainlogpath/$ticketnumber.tar.gz"   # DO NOT CHANGE
    #define the path the the folder where the zipped logs will go 
    logpath=$mainlogpath/$ticketnumber         # DO NOT CHANGE
  fi
  if [ -z ${extension} ]; then
    SETEXT
  else
    SETEXT $extension
  fi
}

function LOGPULL {
  ssh $user@$host << ENDHERE
cd $mainlogpath
mkdir $ticketnumber
cp *.$extension $ticketnumber/
tar -cvzf $ticketnumber.tar.gz $ticketnumber
exit
ENDHERE
  #scp pulls down the archive locally then tar extracts the files
  scp $user@$host:$logz $locallogpath
  tar -xzvf $locallogpath/$ticketnumber.tar.gz -C $locallogpath
  #find $locallogpath/$ticketnumber -type f -print0 | xargs -0r gzip  ##MAY BE USED WHEN LOGSTASH ALLOWS gzipped logs not coming from file beat

  #compressed archives get moved to a processed
  #folder after logs are extracted
  mv $locallogpath/*.tar.gz $processedlogpath
}
# Check that all three parameteres have been passed in. 
if [ ! $# -ge 3 ]; then
  HELP
fi

if [ -z ${pathtosearch} ]; then 
  SETPATH
else
  SETPATH $pathtosearch
fi